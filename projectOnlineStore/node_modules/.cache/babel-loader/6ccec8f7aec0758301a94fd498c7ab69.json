{"ast":null,"code":"var _jsxFileName = \"/home/lorene/Trybe/MeusProjetosPessoais/store/src/components/FinishedPurchase.js\";\nimport { res, validate } from 'email-validator';\nimport React from 'react';\nimport InputMask from 'react-input-mask';\n\nclass FinishedPurchase extends React.Component {\n  constructor() {\n    super();\n\n    this.onInputChange = _ref => {\n      let {\n        target\n      } = _ref;\n\n      var validate = require(\"react-email-validator\");\n\n      const {\n        validateEmail\n      } = this.state;\n      const {\n        name,\n        value\n      } = target;\n      validate(value);\n\n      if (res) {\n        validateEmail = true;\n      }\n\n      this.setState({\n        [name]: [value],\n        validateEmail\n      });\n    };\n\n    this.state = {\n      NomeCompleto: '',\n      Email: '',\n      Cpf: '',\n      tel: '',\n      Cep: '',\n      Address: '',\n      complement: '',\n      cidade: '',\n      numero: '',\n      validateEmail: false\n    };\n  }\n\n  render() {\n    const {\n      NomeCompleto,\n      Email,\n      Cpf,\n      tel,\n      Cep,\n      Address,\n      complement,\n      cidade,\n      numero,\n      validateEmail\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"Informa\\xE7\\xF5es do Comprador \"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Nome Completo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"checkout-fullname\",\n      type: \"text\",\n      id: \"Nome Completo\",\n      onChange: this.onInputChange,\n      name: \"NomeCompleto\",\n      placeholder: \"Nome Completo\",\n      value: NomeCompleto,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"checkout-email\",\n      type: \"text\",\n      id: \"Email\",\n      onChange: this.onInputChange,\n      name: \"Email\",\n      placeholder: \"Email\",\n      value: Email,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"cpf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputMask, {\n      \"data-testid\": \"checkout-cpf\",\n      type: \"text\",\n      id: \"cpf\",\n      onChange: this.onInputChange,\n      name: \"Cpf\",\n      placeholder: \"CPF\",\n      value: Cpf,\n      mask: \"999.999.999-99\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputMask, {\n      \"data-testid\": \"checkout-phone\",\n      type: \"tel\",\n      pattern: \"[0-9]{2}-[0-9]{5}-[0-9]{4}\",\n      id: \"tel\",\n      onChange: this.onInputChange,\n      name: \"tel\",\n      placeholder: \"Telefone\",\n      value: tel,\n      mask: \"(99)99999-9999\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"cep\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputMask, {\n      \"data-testid\": \"checkout-cep\",\n      type: \"text\",\n      id: \"cep\",\n      onChange: this.onInputChange,\n      name: \"Cep\",\n      placeholder: \"CEP\",\n      value: Cep,\n      mask: \"99999-999\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"checkout-address\",\n      type: \"text\",\n      id: \"address\",\n      onChange: this.onInputChange,\n      name: \"Address\",\n      placeholder: \"Endere\\xE7o\",\n      value: Address,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"complement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"complement\",\n      onChange: this.onInputChange,\n      name: \"complement\",\n      placeholder: \"Complemento\",\n      value: complement,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"numero\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"numero\",\n      onChange: this.onInputChange,\n      name: \"numero\",\n      placeholder: \"Numero\",\n      value: numero,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"cidade\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"cidade\",\n      onChange: this.onInputChange,\n      name: \"cidade\",\n      placeholder: \"Cidade\",\n      value: cidade,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    })), validateEmail && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 31\n      }\n    }, \" invalido \")));\n  }\n\n}\n\nexport default FinishedPurchase;","map":{"version":3,"sources":["/home/lorene/Trybe/MeusProjetosPessoais/store/src/components/FinishedPurchase.js"],"names":["res","validate","React","InputMask","FinishedPurchase","Component","constructor","onInputChange","target","require","validateEmail","state","name","value","setState","NomeCompleto","Email","Cpf","tel","Cep","Address","complement","cidade","numero","render"],"mappings":"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","sourcesContent":["import { res, validate } from 'email-validator';\nimport React from 'react';\nimport InputMask from 'react-input-mask';\n\nclass FinishedPurchase extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      NomeCompleto: '',\n      Email: '',\n      Cpf: '',\n      tel: '',\n      Cep: '',\n      Address: '',\n      complement: '',\n      cidade: '',\n      numero: '',\n      validateEmail:false,\n    };\n  }\n\n  onInputChange = ( { target } ) => {\n    var validate = require(\"react-email-validator\");\n    const { validateEmail } = this.state;\n    const { name, value } = target;\n    validate( value );\n    if ( res ) {\n      validateEmail = true;\n    }\n    this.setState({\n      [ name ]: [ value ],\n      validateEmail,\n    });\n  }\n\n  render() {\n    const {\n      NomeCompleto,\n      Email,\n      Cpf,\n      tel,\n      Cep,\n      Address,\n      complement,\n      cidade,\n      numero,\n      validateEmail,\n    } = this.state;\n    return (\n      <div>\n        \n        <h2>Informações do Comprador </h2>\n        <form>\n          <label htmlFor=\"Nome Completo\">\n            <input\n              data-testid=\"checkout-fullname\"\n              type=\"text\"\n              id=\"Nome Completo\"\n              onChange={ this.onInputChange }\n              name=\"NomeCompleto\"\n              placeholder=\"Nome Completo\"\n              value={ NomeCompleto }\n              required\n            />\n          </label>\n          <label htmlFor=\"Email\">\n            <input\n              data-testid=\"checkout-email\"\n              type=\"text\"\n              id=\"Email\"\n              onChange={ this.onInputChange }\n              name=\"Email\"\n              placeholder=\"Email\"\n              value={ Email }\n              required\n            />\n          </label>\n          <label htmlFor=\"cpf\">\n            <InputMask\n              data-testid=\"checkout-cpf\"\n              type=\"text\"\n              id=\"cpf\"\n              onChange={ this.onInputChange }\n              name=\"Cpf\"\n              placeholder=\"CPF\"\n              value={ Cpf }\n              mask=\"999.999.999-99\"\n              required\n            />\n          </label>\n          <label htmlFor=\"tel\">\n            <InputMask\n              data-testid=\"checkout-phone\"\n              type=\"tel\"\n              pattern=\"[0-9]{2}-[0-9]{5}-[0-9]{4}\"\n              id=\"tel\"\n              onChange={ this.onInputChange }\n              name=\"tel\"\n              placeholder=\"Telefone\"\n              value={ tel }\n              mask=\"(99)99999-9999\"\n              required\n            />\n          </label>\n          <label htmlFor=\"cep\">\n            <InputMask\n              data-testid=\"checkout-cep\"\n              type=\"text\"\n              id=\"cep\"\n              onChange={ this.onInputChange }\n              name=\"Cep\"\n              placeholder=\"CEP\"\n              value={ Cep }\n              mask=\"99999-999\"\n              required\n            />\n          </label>\n          <label htmlFor=\"address\">\n            <input\n              data-testid=\"checkout-address\"\n              type=\"text\"\n              id=\"address\"\n              onChange={ this.onInputChange }\n              name=\"Address\"\n              placeholder=\"Endereço\"\n              value={ Address }\n              required\n            />\n          </label>\n          <label htmlFor=\"complement\">\n            <input\n              type=\"text\"\n              id=\"complement\"\n              onChange={ this.onInputChange }\n              name=\"complement\"\n              placeholder=\"Complemento\"\n              value={ complement }\n              required\n            />\n          </label>\n          <label htmlFor=\"numero\">\n            <input\n              type=\"text\"\n              id=\"numero\"\n              onChange={ this.onInputChange }\n              name=\"numero\"\n              placeholder=\"Numero\"\n              value={ numero }\n              required\n            />\n          </label>\n          <label htmlFor=\"cidade\">\n            <input\n              type=\"text\"\n              id=\"cidade\"\n              onChange={ this.onInputChange }\n              name=\"cidade\"\n              placeholder=\"Cidade\"\n              value={ cidade }\n              required\n            />\n          </label>\n          {(validateEmail) && <p> invalido </p>}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default FinishedPurchase;\n"]},"metadata":{},"sourceType":"module"}