{"ast":null,"code":"var _jsxFileName = \"/home/lorene/Trybe/MeusProjetosPessoais/store/src/pages/Home.js\";\nimport React from \"react\";\nimport { Button } from \"reactstrap\";\nimport CartButton from \"../components/CartButton\";\nimport Categories from \"../components/Categories\";\nimport ProductCard from \"../components/ProductCard\";\nimport { getCategories, getProductsFromCategoryAndQuery } from \"../services/api\";\nimport { Col, Container, Row } from \"reactstrap\";\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n\n    this.onChangeInput = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        value\n      } = target;\n      this.setState({\n        nomeProdutoPesquisado: value\n      });\n    };\n\n    this.onSubmitSearch = async () => {\n      const {\n        selectedCategory,\n        nomeProdutoPesquisado\n      } = this.state;\n      const listaProduto = await getProductsFromCategoryAndQuery(selectedCategory, nomeProdutoPesquisado);\n      this.setState({\n        listaProdutos: listaProduto.results\n      });\n    };\n\n    const cartItems = JSON.parse(localStorage.getItem(\"cartTrybe\"));\n    this.state = {\n      categoriesList: [],\n      selectedCategory: \"\",\n      loadingCategory: true,\n      nomeProdutoPesquisado: \"\",\n      listaProdutos: [],\n      cartQuantity: cartItems.reduce((sum, _ref2) => {\n        let {\n          quantity\n        } = _ref2;\n        return sum + quantity;\n      }, 0)\n    };\n    this.onCategoryChange = this.onCategoryChange.bind(this);\n    this.cartQuantityChange = this.cartQuantityChange.bind(this);\n  }\n\n  async componentDidMount() {\n    const categories = await getCategories();\n    this.setState({\n      categoriesList: categories,\n      loadingCategory: false\n    });\n  }\n\n  onCategoryChange(event) {\n    const {\n      nomeProdutoPesquisado\n    } = this.state;\n    const {\n      value\n    } = event.target;\n    this.setState({\n      selectedCategory: value\n    }, async () => {\n      const listaProduto = await getProductsFromCategoryAndQuery(value, nomeProdutoPesquisado);\n      this.setState({\n        listaProdutos: listaProduto.results\n      });\n    });\n  }\n\n  cartQuantityChange() {\n    this.setState(_ref3 => {\n      let {\n        cartQuantity: oldCartQuantity\n      } = _ref3;\n      return {\n        cartQuantity: oldCartQuantity + 1\n      };\n    });\n  }\n\n  render() {\n    const {\n      nomeProdutoPesquisado,\n      listaProdutos,\n      cartQuantity,\n      categoriesList,\n      loadingCategory,\n      selectedCategory\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"bg-light border\",\n      fluid: \"xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 5,\n      className: \"bg-light border\",\n      sm: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, loadingCategory ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, \"Carregando...\") : /*#__PURE__*/React.createElement(Categories, {\n      categoriesList: categoriesList,\n      onChange: this.onCategoryChange,\n      selected: selectedCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 5,\n      className: \"bg-light border\",\n      sm: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CartButton, {\n      cartQuantity: cartQuantity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"pesquisa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"query-input\",\n      type: \"text\",\n      value: nomeProdutoPesquisado,\n      id: \"pesquisa\",\n      onChange: this.onChangeInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      type: \"button\",\n      onClick: this.onSubmitSearch,\n      \"data-testid\": \"query-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \"Enter\"), !listaProdutos.length ? /*#__PURE__*/React.createElement(\"h3\", {\n      \"data-testid\": \"home-initial-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, \"Digite algum termo de pesquisa ou escolha uma categoria.\") : /*#__PURE__*/React.createElement(ProductCard, {\n      listaProdutos: listaProdutos,\n      cartQuantityChange: this.cartQuantityChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/lorene/Trybe/MeusProjetosPessoais/store/src/pages/Home.js"],"names":["React","Button","CartButton","Categories","ProductCard","getCategories","getProductsFromCategoryAndQuery","Col","Container","Row","Home","Component","constructor","onChangeInput","target","value","setState","nomeProdutoPesquisado","onSubmitSearch","selectedCategory","state","listaProduto","listaProdutos","results","cartItems","JSON","parse","localStorage","getItem","categoriesList","loadingCategory","cartQuantity","reduce","sum","quantity","onCategoryChange","bind","cartQuantityChange","componentDidMount","categories","event","oldCartQuantity","render","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport CartButton from \"../components/CartButton\";\nimport Categories from \"../components/Categories\";\nimport ProductCard from \"../components/ProductCard\";\nimport {\n  getCategories,\n  getProductsFromCategoryAndQuery,\n} from \"../services/api\";\nimport { Col, Container, Row } from \"reactstrap\";\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    const cartItems = JSON.parse(localStorage.getItem(\"cartTrybe\"));\n    this.state = {\n      categoriesList: [],\n      selectedCategory: \"\",\n      loadingCategory: true,\n      nomeProdutoPesquisado: \"\",\n      listaProdutos: [],\n      cartQuantity: cartItems.reduce((sum, { quantity }) => sum + quantity, 0),\n    };\n\n    this.onCategoryChange = this.onCategoryChange.bind(this);\n    this.cartQuantityChange = this.cartQuantityChange.bind(this);\n  }\n\n  async componentDidMount() {\n    const categories = await getCategories();\n    this.setState({\n      categoriesList: categories,\n      loadingCategory: false,\n    });\n  }\n\n  onChangeInput = ({ target }) => {\n    const { value } = target;\n    this.setState({\n      nomeProdutoPesquisado: value,\n    });\n  };\n\n  onCategoryChange(event) {\n    const { nomeProdutoPesquisado } = this.state;\n    const { value } = event.target;\n    this.setState(\n      {\n        selectedCategory: value,\n      },\n      async () => {\n        const listaProduto = await getProductsFromCategoryAndQuery(\n          value,\n          nomeProdutoPesquisado\n        );\n        this.setState({\n          listaProdutos: listaProduto.results,\n        });\n      }\n    );\n  }\n\n  onSubmitSearch = async () => {\n    const { selectedCategory, nomeProdutoPesquisado } = this.state;\n    const listaProduto = await getProductsFromCategoryAndQuery(\n      selectedCategory,\n      nomeProdutoPesquisado\n    );\n    this.setState({\n      listaProdutos: listaProduto.results,\n    });\n  };\n\n  cartQuantityChange() {\n    this.setState(({ cartQuantity: oldCartQuantity }) => ({\n      cartQuantity: oldCartQuantity + 1,\n    }));\n  }\n\n  render() {\n    const {\n      nomeProdutoPesquisado,\n      listaProdutos,\n      cartQuantity,\n      categoriesList,\n      loadingCategory,\n      selectedCategory,\n    } = this.state;\n    return (\n      <main>\n        <Container className=\"bg-light border\" fluid=\"xl\">\n          <Row>\n          <Col xs={5} className=\"bg-light border\" sm=\"2\">\n            {loadingCategory ? (\n              <p>Carregando...</p>\n            ) : (\n              <Categories\n                categoriesList={categoriesList}\n                onChange={this.onCategoryChange}\n                selected={selectedCategory}\n              />\n            )}\n            </Col>\n            <Col xs={5} className=\"bg-light border\" sm=\"6\">\n            <CartButton cartQuantity={cartQuantity} />\n            <label htmlFor=\"pesquisa\">\n              <input\n                data-testid=\"query-input\"\n                type=\"text\"\n                value={nomeProdutoPesquisado}\n                id=\"pesquisa\"\n                onChange={this.onChangeInput}\n              />\n            </label>\n            <Button\n              color=\"danger\"\n              type=\"button\"\n              onClick={this.onSubmitSearch}\n              data-testid=\"query-button\"\n            >\n              Enter\n            </Button>\n            {!listaProdutos.length ? (\n              <h3 data-testid=\"home-initial-message\">\n                Digite algum termo de pesquisa ou escolha uma categoria.\n              </h3>\n            ) : (\n              <ProductCard\n                listaProdutos={listaProdutos}\n                cartQuantityChange={this.cartQuantityChange}\n              />\n              ) }\n              </Col>\n          </Row>\n        </Container>\n      </main>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}